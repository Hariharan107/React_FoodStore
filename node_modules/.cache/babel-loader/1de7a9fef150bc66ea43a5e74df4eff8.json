{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\FoodOrder_11\\\\01-starting-project\\\\src\\\\Components\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemtoCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const RemoveItemtoCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCartHandler,\n    removeItem: RemoveItemtoCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","items","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemtoCartHandler","RemoveItemtoCartHandler","cartContext","addItem","removeItem","children"],"sources":["D:/React JS/FoodOrder_11/01-starting-project/src/Components/store/CartProvider.js"],"sourcesContent":["import React,{useReducer} from 'react'\r\nimport CartContext from './cart-context'\r\n\r\nconst defaultCartState={\r\n  item:[],\r\n  totalAmount:0\r\n}\r\n\r\nconst cartReducer=(state,action)=>\r\n{\r\n  if(action.type===\"ADD\")\r\n  {\r\n    const updatedTotalAmount =\r\n    state.totalAmount + action.item.price * action.item.amount;\r\n\r\n  const existingCartItemIndex = state.item.findIndex(\r\n    (item) => item.id === action.item.id\r\n  );\r\n  const existingCartItem = state.items[existingCartItemIndex];\r\n  let updatedItems;\r\n\r\n  if (existingCartItem) {\r\n    const updatedItem = {\r\n      ...existingCartItem,\r\n      amount: existingCartItem.amount + action.item.amount,\r\n    };\r\n    updatedItems = [...state.items];\r\n    updatedItems[existingCartItemIndex] = updatedItem;\r\n  } else {\r\n    updatedItems = state.items.concat(action.item);\r\n  }\r\n    \r\n    return {\r\n      item: updatedItems,\r\n      totalAmount:updatedTotalAmount\r\n    }\r\n  }\r\n  return defaultCartState\r\n}\r\n\r\n\r\nconst CartProvider = (props) => {\r\n  const[cartState,dispatchCartAction]=useReducer(cartReducer,defaultCartState)\r\n  const addItemtoCartHandler=(item)=>\r\n  {\r\n    dispatchCartAction({type:\"ADD\",item:item})\r\n  }\r\n  const RemoveItemtoCartHandler=(id)=>\r\n  {\r\n    dispatchCartAction({type:\"REMOVE\",id:id})\r\n  }\r\n  const cartContext=\r\n  { \r\n    items:cartState.item,\r\n    totalAmount:cartState.totalAmount,\r\n    addItem:addItemtoCartHandler,\r\n    removeItem:RemoveItemtoCartHandler,\r\n  }\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CartProvider\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,UAAU,QAAO,OAAO;AACtC,OAAOC,WAAW,MAAM,gBAAgB;AAAA;AAExC,MAAMC,gBAAgB,GAAC;EACrBC,IAAI,EAAC,EAAE;EACPC,WAAW,EAAC;AACd,CAAC;AAED,MAAMC,WAAW,GAAC,CAACC,KAAK,EAACC,MAAM,KAC/B;EACE,IAAGA,MAAM,CAACC,IAAI,KAAG,KAAK,EACtB;IACE,MAAMC,kBAAkB,GACxBH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACJ,IAAI,CAACO,KAAK,GAAGH,MAAM,CAACJ,IAAI,CAACQ,MAAM;IAE5D,MAAMC,qBAAqB,GAAGN,KAAK,CAACH,IAAI,CAACU,SAAS,CAC/CV,IAAI,IAAKA,IAAI,CAACW,EAAE,KAAKP,MAAM,CAACJ,IAAI,CAACW,EAAE,CACrC;IACD,MAAMC,gBAAgB,GAAGT,KAAK,CAACU,KAAK,CAACJ,qBAAqB,CAAC;IAC3D,IAAIK,YAAY;IAEhB,IAAIF,gBAAgB,EAAE;MACpB,MAAMG,WAAW,GAAG;QAClB,GAAGH,gBAAgB;QACnBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAM,GAAGJ,MAAM,CAACJ,IAAI,CAACQ;MAChD,CAAC;MACDM,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACU,KAAK,CAAC;MAC/BC,YAAY,CAACL,qBAAqB,CAAC,GAAGM,WAAW;IACnD,CAAC,MAAM;MACLD,YAAY,GAAGX,KAAK,CAACU,KAAK,CAACG,MAAM,CAACZ,MAAM,CAACJ,IAAI,CAAC;IAChD;IAEE,OAAO;MACLA,IAAI,EAAEc,YAAY;MAClBb,WAAW,EAACK;IACd,CAAC;EACH;EACA,OAAOP,gBAAgB;AACzB,CAAC;AAGD,MAAMkB,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAK,CAACC,SAAS,EAACC,kBAAkB,CAAC,GAACvB,UAAU,CAACK,WAAW,EAACH,gBAAgB,CAAC;EAC5E,MAAMsB,oBAAoB,GAAErB,IAAI,IAChC;IACEoB,kBAAkB,CAAC;MAACf,IAAI,EAAC,KAAK;MAACL,IAAI,EAACA;IAAI,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMsB,uBAAuB,GAAEX,EAAE,IACjC;IACES,kBAAkB,CAAC;MAACf,IAAI,EAAC,QAAQ;MAACM,EAAE,EAACA;IAAE,CAAC,CAAC;EAC3C,CAAC;EACD,MAAMY,WAAW,GACjB;IACEV,KAAK,EAACM,SAAS,CAACnB,IAAI;IACpBC,WAAW,EAACkB,SAAS,CAAClB,WAAW;IACjCuB,OAAO,EAACH,oBAAoB;IAC5BI,UAAU,EAACH;EACb,CAAC;EACD,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACtCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAA,GAtBKT,YAAY;AAAA,KAAZA,YAAY;AAwBlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}