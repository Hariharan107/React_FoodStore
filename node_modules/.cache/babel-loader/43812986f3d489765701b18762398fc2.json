{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\FoodOrder_11\\\\01-starting-project\\\\src\\\\Components\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    // const updatedTotalAmount =\n    //   state.totalAmount + action.item.price * action.item.amount;\n\n    // const existingCartItemIndex = state.item.findIndex(\n    //   (item) => item.id === action.item.id\n    // );\n    // const existingCartItem = state.item[existingCartItemIndex];\n\n    // let updatedItems;\n    // if (existingCartItem) {\n    //   let updatedItem = {\n    //     ...existingCartItem,\n    //     amount: existingCartItem.amount + action.item.amount,\n    //   };\n    //   updatedItems = [...state.item];\n    //   updatedItems[existingCartItemIndex] = updatedItem;\n    // } else {\n    //   updatedItems = state.item.concat(action.item);\n    // }\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      let updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.item];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.item.concat(action.item);\n    }\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    //   const existingCartItemIndex=state.item.findIndex((item=>item.id===action.id))\n    //   const existingCartItem=state.item[existingCartItemIndex]\n\n    //   const updatedTotalAmount=state.totalAmount-existingCartItem.price\n    //   let updatedItems\n    //   if(existingCartItem.amount===1)\n    //   {\n    //     updatedItems=state.item.filter(item=>item.id!==action.id)\n    //   }\n    //  else{\n    //   let updatedItem={...existingCartItem,amount:existingCartItem.amount-1}\n    //   updatedItems=[...state.item]\n    //   updatedItems[existingCartItemIndex]=updatedItem\n    //  }\n    // if (action.type === 'REMOVE') {\n    //   const existingCartItemIndex = state.item.findIndex(\n    //     (item) => item.id === action.id\n    //   );\n    //   const existingItem = state.item[existingCartItemIndex];\n    //   const updatedTotalAmount = state.totalAmount - existingItem.price;\n    //   let updatedItems;\n    //   if (existingItem.amount === 1) {\n    //     updatedItems = state.item.filter(item => item.id !== action.id);\n    //   } else {\n    //     const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n    //     updatedItems = [...state.item];\n    //     updatedItems[existingCartItemIndex] = updatedItem;\n    //   }\n\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updatedItems;\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.item.filter(item => item.id !== action.id);\n    } else {\n      let updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem - 1\n      };\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemtoCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const RemoveItemtoCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCartHandler,\n    removeItem: RemoveItemtoCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemtoCartHandler","RemoveItemtoCartHandler","cartContext","items","addItem","removeItem","children"],"sources":["D:/React JS/FoodOrder_11/01-starting-project/src/Components/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  item: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    // const updatedTotalAmount =\r\n    //   state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    // const existingCartItemIndex = state.item.findIndex(\r\n    //   (item) => item.id === action.item.id\r\n    // );\r\n    // const existingCartItem = state.item[existingCartItemIndex];\r\n\r\n    // let updatedItems;\r\n    // if (existingCartItem) {\r\n    //   let updatedItem = {\r\n    //     ...existingCartItem,\r\n    //     amount: existingCartItem.amount + action.item.amount,\r\n    //   };\r\n    //   updatedItems = [...state.item];\r\n    //   updatedItems[existingCartItemIndex] = updatedItem;\r\n    // } else {\r\n    //   updatedItems = state.item.concat(action.item);\r\n    // }\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    const existingCartItemIndex = state.item.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.item[existingCartItemIndex];\r\n    let updatedItems;\r\n    if (existingCartItem) {\r\n      let updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.item];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n    else{\r\n      updatedItems=state.item.concat(action.item)\r\n    }\r\n\r\n    return {\r\n      item: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    //   const existingCartItemIndex=state.item.findIndex((item=>item.id===action.id))\r\n    //   const existingCartItem=state.item[existingCartItemIndex]\r\n\r\n    //   const updatedTotalAmount=state.totalAmount-existingCartItem.price\r\n    //   let updatedItems\r\n    //   if(existingCartItem.amount===1)\r\n    //   {\r\n    //     updatedItems=state.item.filter(item=>item.id!==action.id)\r\n    //   }\r\n    //  else{\r\n    //   let updatedItem={...existingCartItem,amount:existingCartItem.amount-1}\r\n    //   updatedItems=[...state.item]\r\n    //   updatedItems[existingCartItemIndex]=updatedItem\r\n    //  }\r\n    // if (action.type === 'REMOVE') {\r\n    //   const existingCartItemIndex = state.item.findIndex(\r\n    //     (item) => item.id === action.id\r\n    //   );\r\n    //   const existingItem = state.item[existingCartItemIndex];\r\n    //   const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    //   let updatedItems;\r\n    //   if (existingItem.amount === 1) {\r\n    //     updatedItems = state.item.filter(item => item.id !== action.id);\r\n    //   } else {\r\n    //     const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n    //     updatedItems = [...state.item];\r\n    //     updatedItems[existingCartItemIndex] = updatedItem;\r\n    //   }\r\n\r\n\r\n    const existingCartItemIndex=state.item.findIndex(item=>item.id===action.id)\r\n    const existingCartItem=state.item[existingCartItemIndex]\r\n    const updatedTotalAmount=state.totalAmount-existingCartItem.price\r\n    let updatedItems\r\n    if(existingCartItem.amount===1)\r\n    {\r\n      updatedItems=state.item.filter(item=>item.id!==action.id)\r\n\r\n    }\r\n    else{\r\n      let updatedItem={...existingCartItem,amount: existingCartItem-1}\r\n      updatedItems[existingCartItemIndex]=updatedItem\r\n\r\n    }\r\n\r\n    return {\r\n      item: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemtoCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const RemoveItemtoCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.item,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemtoCartHandler,\r\n    removeItem: RemoveItemtoCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}